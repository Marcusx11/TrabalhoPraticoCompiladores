program :  definition program | vazio

definition : def-variable | def-function | def-type

def-variable : VAR ID ':' type ';'

type : ID

def-type : TYPE ID '=' typedesc ;

typedesc : ID | '[' typedesc ']' | '{' { field } '}'

field : ID ':' type ';' ;

def-function : FUNCTION ID '(' parameters ')' [':' type] block

parameters : [ parameter { ',' parameter } ]

parameter : ID ':' type

block : '{' { def-variable } { statement } '}'

statement : IF exp block [ ELSE block ]
          | WHILE exp block
          | var '=' exp ';'
          | RETURN [ exp ] ';'
          | call ';'
          | '@' exp ';'
          | block

var : ID | exp '[' exp ']' | exp '.' ID

exp : NUMERAL
    | var
    | '(' exp ')'
    | call
    | exp AS type
    | NEW type [ '[' exp ']' ]
    | '-' exp
    | exp '+' exp
    | exp '-' exp
    | exp '*' exp
    | exp '/' exp
    | exp '==' exp
    | exp '~=' exp
    | exp '<=' exp
    | exp '>=' exp
    | exp '<' exp
    | exp '>' exp
    | '!' exp
    | exp '&&' exp
    | exp '||' exp

call : ID '(' explist ')'

explist : [ exp { ',' exp } ]