program : definition program | EOF

definition : def-variable | def-function | def-type

def-variable : VAR ID ':' type ';'

type : ID

def-type : TYPE ID '=' typedesc ;

typedesc : ID | '[' typedesc ']' | '{' field2 '}'

field2 : field field2 | vazio

field : ID ':' type ';'

def-function : FUNCTION ID '(' parameters ')' type2 block

type2 : ':' type | vazio

parameters : parameter parameters2 | vazio

parameters2 : ',' parameter parameters2 | vazio

parameter : ID ':' type

block : '{' def-variable2 statement2 '}'

def-variable2 : def_variable def-variable2 | vazio

statement2 : statement statement2 | vazio

statement : IF cond block else-cond
          | WHILE cond block
          | var '=' exp ';'
          | RETURN return-exp ';'
          | call ';'
          | '@' exp ';'
          | block

else-cond : ELSE block | vazio

return-exp : exp | vazio

var : ID | exp '[' exp ']' | exp '.' ID

exp : NUMERAL
    | var
    | '(' exp ')'
    | call
    | exp AS type
    | NEW type exp-new
    | '-' exp
    | exp '+' exp
    | exp '-' exp
    | exp '*' exp
    | exp '/' exp
    | cond '?' exp ':' exp

exp-new = '[' exp ']' | vazio

cond :  '(' cond ')'
	| exp '==' exp
	| exp '~=' exp
	| exp '<=' exp
	| exp '>=' exp
	| exp '<' exp
	| exp '>' exp
	| '!' cond
	| cond '&&' cond
	| cond '||' cond


call : ID '(' explist

explist : exp explist2 | ')'

explist2 : ',' exp explist2 | vazio
